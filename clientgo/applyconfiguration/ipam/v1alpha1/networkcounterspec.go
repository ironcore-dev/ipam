// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// NetworkCounterSpecApplyConfiguration represents an declarative configuration of the NetworkCounterSpec type for use
// with apply.
type NetworkCounterSpecApplyConfiguration struct {
	Vacant []NetworkIDIntervalApplyConfiguration `json:"vacant,omitempty"`
}

// NetworkCounterSpecApplyConfiguration constructs an declarative configuration of the NetworkCounterSpec type for use with
// apply.
func NetworkCounterSpec() *NetworkCounterSpecApplyConfiguration {
	return &NetworkCounterSpecApplyConfiguration{}
}

// WithVacant adds the given value to the Vacant field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Vacant field.
func (b *NetworkCounterSpecApplyConfiguration) WithVacant(values ...*NetworkIDIntervalApplyConfiguration) *NetworkCounterSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithVacant")
		}
		b.Vacant = append(b.Vacant, *values[i])
	}
	return b
}
