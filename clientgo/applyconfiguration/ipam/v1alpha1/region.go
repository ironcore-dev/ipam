// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// RegionApplyConfiguration represents an declarative configuration of the Region type for use
// with apply.
type RegionApplyConfiguration struct {
	Name              *string  `json:"name,omitempty"`
	AvailabilityZones []string `json:"availabilityZones,omitempty"`
}

// RegionApplyConfiguration constructs an declarative configuration of the Region type for use with
// apply.
func Region() *RegionApplyConfiguration {
	return &RegionApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *RegionApplyConfiguration) WithName(value string) *RegionApplyConfiguration {
	b.Name = &value
	return b
}

// WithAvailabilityZones adds the given value to the AvailabilityZones field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the AvailabilityZones field.
func (b *RegionApplyConfiguration) WithAvailabilityZones(values ...string) *RegionApplyConfiguration {
	for i := range values {
		b.AvailabilityZones = append(b.AvailabilityZones, values[i])
	}
	return b
}
